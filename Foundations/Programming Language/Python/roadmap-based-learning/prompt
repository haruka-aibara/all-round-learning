【Python講義】トピック名のMarkdownファイルを作成してください。

以下の構成で作成してほしいです：

1. トピックの概要と重要性の説明（1行程度）
2. 主要概念の理論的説明（1行程度）
3. 実際に試せるコード例step by step形式
   - 各コード例には実行方法と期待される出力を含める
   - コードにはコメントを入れて説明を加える

特に重視してほしいポイント：
- 初心者にもわかりやすい説明
- コピペして即実行できるコード例
- 「このコードを入力して実行してみましょう」という明確な指示
- 実行結果についての解説
- 必ず含めてほしい具体的な内容のこと以外は記載しないでください。他の講義用markdownファイルと内容が重複する可能性があるからです。
- 必ず含めてほしい具体的な内容で使われてる変数名は自身がテストで適当につけたものの場合があるため、適切な変数名にしてください。

対象読者レベル：初心者/中級者

必ず含めてほしい具体的な内容：


【Python講義】タプルのMarkdownファイルを作成してください。

以下の構成で作成してほしいです：

1. トピックの概要と重要性の説明（1行程度）
2. 主要概念の理論的説明（1行程度）
3. 実際に試せるコード例step by step形式
   - 各コード例には実行方法と期待される出力を含める
   - コードにはコメントを入れて説明を加える

特に重視してほしいポイント：
- 初心者にもわかりやすい説明
- コピペして即実行できるコード例
- 「このコードを入力して実行してみましょう」という明確な指示
- 実行結果についての解説
- 必ず含めてほしい具体的な内容のこと以外は記載しないでください。他の講義用markdownファイルと内容が重複する可能性があるからです。
- 必ず含めてほしい具体的な内容で使われてる変数名は自身がテストで適当につけたものの場合があるため、適切な変数名にしてください。

対象読者レベル：初心者/中級者

必ず含めてほしい具体的な内容：
d = {'x': 10, 'y': 15}

print(d)

print(d['x'])

d['x'] = 100
print(d['x'])

d['aaa'] = 200
print(d['aaa'])

# キーは数字でもOK
d[1] = 1000
print(d[1])

# こういう生成も可能
print(dict(a=10, b=20))

print(d.keys())

print(d.values())


d2 = {'x': 1000, 'y': 200, 'j': 200}

d.update(d2)
# 同じキーだけ更新され、ないキーは追加され、といったupdateというメソッドがある
print(d)

# 値のとりだしかた
print(d.get('x'))

# ないときは None がかえる
print(d.get('z'))

# これだとエラーになってしまう
# print(d['z'])

d.pop('x')
print(d)

del d['y']
print(d)

d.clear()
print(d)

d = {'x': 10, 'y': 15}

print('x' in d)

# これもリストと同じく参照渡しになる
x = {'a': 1}
y = x
y['a'] = 1000
print(x)
print(y)

# 回避するには
x = {'a': 1}
y = x.copy()
y['a'] = 1000
print(x)
print(y)

